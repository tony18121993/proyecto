/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.crudjdbcdemo.Formularios;

import com.mycompany.crudjdbcdemo.Entidades.Curso;
import com.mycompany.crudjdbcdemo.Entidades.CursoAcademico;
import com.mycompany.crudjdbcdemo.controladorDAO.CursoAcademicoDAOimp;
import com.mycompany.crudjdbcdemo.controladorDAO.CursoDAOimp;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author TONY
 */
public class frmCurso extends javax.swing.JFrame {

    /**
     * Creates new form frmCurso
     */
        List<CursoAcademico> ca=new ArrayList();

    public frmCurso() {
        initComponents();
        cargaComboBox();
        configTabla();
        cargaTabla();
        generaTablaCurso();
    }
    
    private void configTabla(){
        String col[]={"ID","CODIGO","NOMBRE","OBSERVACIONES","CURSOACADEMICO"};
        
        DefaultTableModel modelo=new DefaultTableModel(col,0){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
    };
        jtCurso.setModel(modelo);
        
        
        
    }
    public void cargaComboBox(){
        
        CursoAcademicoDAOimp cursoaca=CursoAcademicoDAOimp.getInstance();
        try{
             ca=cursoaca.getAll();
             for( CursoAcademico curso:ca){
                cbcursoacademico.addItem(curso.getDescripcion());
            }
            }catch(Exception e){
            System.out.println("Error:"+e.getMessage());
        }
}
    private void cargaTabla(){
        DefaultTableModel modelo=(DefaultTableModel)jtCurso.getModel();
        CursoAcademicoDAOimp curacaDAO=CursoAcademicoDAOimp.getInstance();
        CursoDAOimp cursoaca=CursoDAOimp.getInstance();
        String[] fila=new String[5];
        
        modelo.setNumRows(0);
        try{
            List<Curso> lst=cursoaca.getAll();
            
            for( Curso curso :lst){
                fila[0]=""+curso.getId();
                fila[1]=""+curso.getCodigo();
                fila[2]=""+curso.getNombre();
                fila[3]=""+curso.getObservaciones();
                CursoAcademico cacademico =curacaDAO.getById(curso.getIdCursoAcademico());
                fila[4]=cacademico.getDescripcion();
                
                modelo.addRow(fila);
            }
            
            
        }catch(Exception e){
            System.out.println("Error:"+e.getMessage());
        }
    }
     private void cargaTabla1(int idcursoacademico){
        DefaultTableModel modelo=(DefaultTableModel)jtCurso.getModel();
        CursoAcademicoDAOimp curacaDAO=CursoAcademicoDAOimp.getInstance();
        CursoDAOimp cursoaca=CursoDAOimp.getInstance();
        String[] fila=new String[5];
        
        modelo.setNumRows(0);
        try{
            List<Curso> lstcurso=cursoaca.getAllbyCursoAcademico(idcursoacademico);
            
            for( Curso curso :lstcurso){
                fila[0]=""+curso.getId();
                fila[1]=""+curso.getCodigo();
                fila[2]=""+curso.getNombre();
                fila[3]=""+curso.getObservaciones();
                CursoAcademico cacademico =curacaDAO.getById(curso.getIdCursoAcademico());
                fila[4]=cacademico.getDescripcion();
                
                modelo.addRow(fila);
            }
            
            
        }catch(Exception e){
            System.out.println("Error:"+e.getMessage());
        }
    }
     public void generaTablaCurso(){
         try{
         cbcursoacademico.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent event) {
                if (event.getStateChange() == ItemEvent.SELECTED) {
                    // Obtener el elemento seleccionado del ComboBox
                    int idcursoacademico= ca.get(cbcursoacademico.getSelectedIndex()).getId();
                    
                    // Cargar la tabla correspondiente
                    cargaTabla1(idcursoacademico);
                }
              }
           });
         
         }catch(Exception e){
            System.out.println("Error:"+e.getMessage());
        }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCurso = new javax.swing.JTable();
        txtbuscar = new javax.swing.JTextField();
        btnAnadir = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        cbcursoacademico = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));

        jtCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "CODIGO", "OBSERVACIONES"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCursoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtCurso);

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbuscarKeyPressed(evt);
            }
        });

        btnAnadir.setText("AÃ±adir");
        btnAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirActionPerformed(evt);
            }
        });

        btneliminar.setText("Eliminar");
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbcursoacademico, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnAnadir)
                        .addGap(61, 61, 61)
                        .addComponent(btneliminar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(345, 345, 345))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(cbcursoacademico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAnadir)
                    .addComponent(btneliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 330, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbuscarActionPerformed

    private void txtbuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            System.out.println("pulsado enter");
            DefaultTableModel modelo=(DefaultTableModel) jtCurso.getModel();
            TableRowSorter <TableModel> trSorter=new TableRowSorter<TableModel>(modelo);
            
            jtCurso.setRowSorter(trSorter);
            
            if(txtbuscar.getText().length()==0){
                trSorter.setRowFilter(null);
            }else{
                trSorter.setRowFilter(RowFilter.regexFilter(txtbuscar.getText().trim()));
            }
        }
    }//GEN-LAST:event_txtbuscarKeyPressed
                   
   
    
    private void btnAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirActionPerformed
        // TODO add your handling code here:
        JDialog frame =new JDialog();
            frame.setTitle("Detalle aÃ±adir Curso");
            frame.setModal(true);
            jpCursoAdd panel=new jpCursoAdd();
            

            frame.getContentPane().add(panel);
            frame.pack();

            frame.setVisible(true); 
            cargaTabla();
    }//GEN-LAST:event_btnAnadirActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        CursoDAOimp cursoaca=CursoDAOimp.getInstance();
        try{
            int i =Integer.parseInt((jtCurso.getValueAt(jtCurso.getSelectedRow(), 0)).toString());
            cursoaca.delete(i);
            JOptionPane.showMessageDialog(this, "Curso eliminado correctamente");
            cargaTabla();
        }catch(Exception e){
            System.out.println("Error:"+e.getMessage());
         } 
    }//GEN-LAST:event_btneliminarActionPerformed

    private void jtCursoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCursoMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            JDialog frame =new JDialog();
            frame.setTitle("Detalle Curso");
            frame.setModal(true);
            jpCursoUpdate panel=new jpCursoUpdate();
            int idSeleccion=Integer.parseInt(jtCurso.getValueAt(jtCurso.getSelectedRow(), 0).toString());
            panel.CursoCargaDetalle(idSeleccion);
            frame.getContentPane().add(panel);
            frame.pack();

            frame.setVisible(true);
            cargaTabla();

        }
    }//GEN-LAST:event_jtCursoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadir;
    private javax.swing.JButton btneliminar;
    private javax.swing.JComboBox<String> cbcursoacademico;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtCurso;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
